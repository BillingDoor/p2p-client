# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Message.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='Message.proto',
  package='botnet_p2p',
  syntax='proto3',
  serialized_pb=_b('\n\rMessage.proto\x12\nbotnet_p2p\"\xfc\x07\n\x07Message\x12\x0c\n\x04uuid\x18\x01 \x01(\t\x12-\n\x04TYPE\x18\x02 \x01(\x0e\x32\x1f.botnet_p2p.Message.MessageType\x12\x0e\n\x06sender\x18\x03 \x01(\t\x12\x10\n\x08receiver\x18\x04 \x01(\t\x12\x13\n\x0bpropagation\x18\x05 \x01(\x08\x12\x11\n\tsignature\x18\x06 \x01(\x0c\x12.\n\x07\x63ommand\x18\x07 \x01(\x0b\x32\x1b.botnet_p2p.Message.CommandH\x00\x12\x30\n\x08response\x18\x08 \x01(\x0b\x32\x1c.botnet_p2p.Message.ResponseH\x00\x12-\n\x04\x66ile\x18\t \x01(\x0b\x32\x1d.botnet_p2p.Message.FileChunkH\x00\x12\x34\n\nnatRequest\x18\n \x01(\x0b\x32\x1e.botnet_p2p.Message.NATRequestH\x00\x12\x30\n\x08natCheck\x18\x0b \x01(\x0b\x32\x1c.botnet_p2p.Message.NATCheckH\x00\x12(\n\x04join\x18\x0c \x01(\x0b\x32\x18.botnet_p2p.Message.JoinH\x00\x12*\n\x05leave\x18\r \x01(\x0b\x32\x19.botnet_p2p.Message.LeaveH\x00\x1a\x30\n\x07\x43ommand\x12\x0f\n\x07\x63ommand\x18\x01 \x01(\t\x12\x14\n\x0csendResponse\x18\x02 \x01(\x08\x1a\x45\n\x08Response\x12\r\n\x05value\x18\x01 \x01(\t\x12*\n\x06status\x18\x02 \x01(\x0e\x32\x1a.botnet_p2p.Message.Status\x1ap\n\tFileChunk\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\x08\x12\x13\n\x0b\x63hunkNumber\x18\x03 \x01(\r\x12\x11\n\tallChunks\x18\x04 \x01(\r\x12\x11\n\tchunkSize\x18\x05 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x06 \x01(\x0c\x1a\x1c\n\nNATRequest\x12\x0e\n\x06target\x18\x01 \x01(\t\x1a\x1a\n\x08NATCheck\x12\x0e\n\x06source\x18\x01 \x01(\t\x1a/\n\x04Join\x12\n\n\x02IP\x18\x01 \x01(\t\x12\x0c\n\x04Port\x18\x02 \x01(\t\x12\r\n\x05isNAT\x18\x03 \x01(\x08\x1a\x15\n\x05Leave\x12\x0c\n\x04guid\x18\x01 \x01(\t\"\x86\x01\n\x0bMessageType\x12\r\n\tUNDEFINED\x10\x00\x12\x0b\n\x07\x43OMMAND\x10\x01\x12\x0c\n\x08RESPONSE\x10\x02\x12\x0e\n\nFILE_CHUNK\x10\x03\x12\x0f\n\x0bNAT_REQUEST\x10\x04\x12\r\n\tNAT_CHECK\x10\x05\x12\x08\n\x04PING\x10\x06\x12\x08\n\x04JOIN\x10\x07\x12\t\n\x05LEAVE\x10\x08\"\x1a\n\x06Status\x12\x08\n\x04\x46\x41IL\x10\x00\x12\x06\n\x02OK\x10\x01\x42\t\n\x07payloadb\x06proto3')
)



_MESSAGE_MESSAGETYPE = _descriptor.EnumDescriptor(
  name='MessageType',
  full_name='botnet_p2p.Message.MessageType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMMAND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESPONSE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_CHUNK', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NAT_REQUEST', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NAT_CHECK', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PING', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JOIN', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEAVE', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=877,
  serialized_end=1011,
)
_sym_db.RegisterEnumDescriptor(_MESSAGE_MESSAGETYPE)

_MESSAGE_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='botnet_p2p.Message.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FAIL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OK', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1013,
  serialized_end=1039,
)
_sym_db.RegisterEnumDescriptor(_MESSAGE_STATUS)


_MESSAGE_COMMAND = _descriptor.Descriptor(
  name='Command',
  full_name='botnet_p2p.Message.Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='botnet_p2p.Message.Command.command', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sendResponse', full_name='botnet_p2p.Message.Command.sendResponse', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=511,
  serialized_end=559,
)

_MESSAGE_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='botnet_p2p.Message.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='botnet_p2p.Message.Response.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='botnet_p2p.Message.Response.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=561,
  serialized_end=630,
)

_MESSAGE_FILECHUNK = _descriptor.Descriptor(
  name='FileChunk',
  full_name='botnet_p2p.Message.FileChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='botnet_p2p.Message.FileChunk.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='botnet_p2p.Message.FileChunk.name', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='chunkNumber', full_name='botnet_p2p.Message.FileChunk.chunkNumber', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='allChunks', full_name='botnet_p2p.Message.FileChunk.allChunks', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='chunkSize', full_name='botnet_p2p.Message.FileChunk.chunkSize', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='botnet_p2p.Message.FileChunk.data', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=632,
  serialized_end=744,
)

_MESSAGE_NATREQUEST = _descriptor.Descriptor(
  name='NATRequest',
  full_name='botnet_p2p.Message.NATRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='botnet_p2p.Message.NATRequest.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=746,
  serialized_end=774,
)

_MESSAGE_NATCHECK = _descriptor.Descriptor(
  name='NATCheck',
  full_name='botnet_p2p.Message.NATCheck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source', full_name='botnet_p2p.Message.NATCheck.source', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=776,
  serialized_end=802,
)

_MESSAGE_JOIN = _descriptor.Descriptor(
  name='Join',
  full_name='botnet_p2p.Message.Join',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='IP', full_name='botnet_p2p.Message.Join.IP', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Port', full_name='botnet_p2p.Message.Join.Port', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='isNAT', full_name='botnet_p2p.Message.Join.isNAT', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=804,
  serialized_end=851,
)

_MESSAGE_LEAVE = _descriptor.Descriptor(
  name='Leave',
  full_name='botnet_p2p.Message.Leave',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='guid', full_name='botnet_p2p.Message.Leave.guid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=853,
  serialized_end=874,
)

_MESSAGE = _descriptor.Descriptor(
  name='Message',
  full_name='botnet_p2p.Message',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='botnet_p2p.Message.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='TYPE', full_name='botnet_p2p.Message.TYPE', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sender', full_name='botnet_p2p.Message.sender', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='receiver', full_name='botnet_p2p.Message.receiver', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='propagation', full_name='botnet_p2p.Message.propagation', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signature', full_name='botnet_p2p.Message.signature', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='command', full_name='botnet_p2p.Message.command', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='response', full_name='botnet_p2p.Message.response', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file', full_name='botnet_p2p.Message.file', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='natRequest', full_name='botnet_p2p.Message.natRequest', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='natCheck', full_name='botnet_p2p.Message.natCheck', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='join', full_name='botnet_p2p.Message.join', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='leave', full_name='botnet_p2p.Message.leave', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MESSAGE_COMMAND, _MESSAGE_RESPONSE, _MESSAGE_FILECHUNK, _MESSAGE_NATREQUEST, _MESSAGE_NATCHECK, _MESSAGE_JOIN, _MESSAGE_LEAVE, ],
  enum_types=[
    _MESSAGE_MESSAGETYPE,
    _MESSAGE_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='botnet_p2p.Message.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=30,
  serialized_end=1050,
)

_MESSAGE_COMMAND.containing_type = _MESSAGE
_MESSAGE_RESPONSE.fields_by_name['status'].enum_type = _MESSAGE_STATUS
_MESSAGE_RESPONSE.containing_type = _MESSAGE
_MESSAGE_FILECHUNK.containing_type = _MESSAGE
_MESSAGE_NATREQUEST.containing_type = _MESSAGE
_MESSAGE_NATCHECK.containing_type = _MESSAGE
_MESSAGE_JOIN.containing_type = _MESSAGE
_MESSAGE_LEAVE.containing_type = _MESSAGE
_MESSAGE.fields_by_name['TYPE'].enum_type = _MESSAGE_MESSAGETYPE
_MESSAGE.fields_by_name['command'].message_type = _MESSAGE_COMMAND
_MESSAGE.fields_by_name['response'].message_type = _MESSAGE_RESPONSE
_MESSAGE.fields_by_name['file'].message_type = _MESSAGE_FILECHUNK
_MESSAGE.fields_by_name['natRequest'].message_type = _MESSAGE_NATREQUEST
_MESSAGE.fields_by_name['natCheck'].message_type = _MESSAGE_NATCHECK
_MESSAGE.fields_by_name['join'].message_type = _MESSAGE_JOIN
_MESSAGE.fields_by_name['leave'].message_type = _MESSAGE_LEAVE
_MESSAGE_MESSAGETYPE.containing_type = _MESSAGE
_MESSAGE_STATUS.containing_type = _MESSAGE
_MESSAGE.oneofs_by_name['payload'].fields.append(
  _MESSAGE.fields_by_name['command'])
_MESSAGE.fields_by_name['command'].containing_oneof = _MESSAGE.oneofs_by_name['payload']
_MESSAGE.oneofs_by_name['payload'].fields.append(
  _MESSAGE.fields_by_name['response'])
_MESSAGE.fields_by_name['response'].containing_oneof = _MESSAGE.oneofs_by_name['payload']
_MESSAGE.oneofs_by_name['payload'].fields.append(
  _MESSAGE.fields_by_name['file'])
_MESSAGE.fields_by_name['file'].containing_oneof = _MESSAGE.oneofs_by_name['payload']
_MESSAGE.oneofs_by_name['payload'].fields.append(
  _MESSAGE.fields_by_name['natRequest'])
_MESSAGE.fields_by_name['natRequest'].containing_oneof = _MESSAGE.oneofs_by_name['payload']
_MESSAGE.oneofs_by_name['payload'].fields.append(
  _MESSAGE.fields_by_name['natCheck'])
_MESSAGE.fields_by_name['natCheck'].containing_oneof = _MESSAGE.oneofs_by_name['payload']
_MESSAGE.oneofs_by_name['payload'].fields.append(
  _MESSAGE.fields_by_name['join'])
_MESSAGE.fields_by_name['join'].containing_oneof = _MESSAGE.oneofs_by_name['payload']
_MESSAGE.oneofs_by_name['payload'].fields.append(
  _MESSAGE.fields_by_name['leave'])
_MESSAGE.fields_by_name['leave'].containing_oneof = _MESSAGE.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['Message'] = _MESSAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), dict(

  Command = _reflection.GeneratedProtocolMessageType('Command', (_message.Message,), dict(
    DESCRIPTOR = _MESSAGE_COMMAND,
    __module__ = 'Message_pb2'
    # @@protoc_insertion_point(class_scope:botnet_p2p.Message.Command)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _MESSAGE_RESPONSE,
    __module__ = 'Message_pb2'
    # @@protoc_insertion_point(class_scope:botnet_p2p.Message.Response)
    ))
  ,

  FileChunk = _reflection.GeneratedProtocolMessageType('FileChunk', (_message.Message,), dict(
    DESCRIPTOR = _MESSAGE_FILECHUNK,
    __module__ = 'Message_pb2'
    # @@protoc_insertion_point(class_scope:botnet_p2p.Message.FileChunk)
    ))
  ,

  NATRequest = _reflection.GeneratedProtocolMessageType('NATRequest', (_message.Message,), dict(
    DESCRIPTOR = _MESSAGE_NATREQUEST,
    __module__ = 'Message_pb2'
    # @@protoc_insertion_point(class_scope:botnet_p2p.Message.NATRequest)
    ))
  ,

  NATCheck = _reflection.GeneratedProtocolMessageType('NATCheck', (_message.Message,), dict(
    DESCRIPTOR = _MESSAGE_NATCHECK,
    __module__ = 'Message_pb2'
    # @@protoc_insertion_point(class_scope:botnet_p2p.Message.NATCheck)
    ))
  ,

  Join = _reflection.GeneratedProtocolMessageType('Join', (_message.Message,), dict(
    DESCRIPTOR = _MESSAGE_JOIN,
    __module__ = 'Message_pb2'
    # @@protoc_insertion_point(class_scope:botnet_p2p.Message.Join)
    ))
  ,

  Leave = _reflection.GeneratedProtocolMessageType('Leave', (_message.Message,), dict(
    DESCRIPTOR = _MESSAGE_LEAVE,
    __module__ = 'Message_pb2'
    # @@protoc_insertion_point(class_scope:botnet_p2p.Message.Leave)
    ))
  ,
  DESCRIPTOR = _MESSAGE,
  __module__ = 'Message_pb2'
  # @@protoc_insertion_point(class_scope:botnet_p2p.Message)
  ))
_sym_db.RegisterMessage(Message)
_sym_db.RegisterMessage(Message.Command)
_sym_db.RegisterMessage(Message.Response)
_sym_db.RegisterMessage(Message.FileChunk)
_sym_db.RegisterMessage(Message.NATRequest)
_sym_db.RegisterMessage(Message.NATCheck)
_sym_db.RegisterMessage(Message.Join)
_sym_db.RegisterMessage(Message.Leave)


# @@protoc_insertion_point(module_scope)
